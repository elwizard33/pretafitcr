---
// Import reviews data from data source with error handling
import { googleMapsUrl, getValidatedReviews, getDefaultReview } from '../../data/reviews';

// Async function to fetch reviews for streaming optimization
async function fetchReviews() {
  // Simulate potential async data fetching (e.g., API calls)
  // This enables HTML streaming where this component can render after other content
  await new Promise(resolve => setTimeout(resolve, 50));
  
  try {
    const validatedReviews = getValidatedReviews();
    
    // If no valid reviews found, provide default review
    if (!validatedReviews || validatedReviews.length === 0) {
      console.warn('No valid reviews found, using default review');
      return [getDefaultReview()];
    }
    
    return validatedReviews;
  } catch (error) {
    console.error('Error loading reviews:', error);
    return [getDefaultReview()];
  }
}

// Await reviews for streaming optimization
const validatedReviews = await fetchReviews();
---

<section id="reviews" class="section" aria-labelledby="reviews-heading">
    <div class="container">
      <div class="overline">Opiniones</div>
      <h2 id="reviews-heading" class="h2">Lo que dicen nuestros clientes</h2>
      
      {validatedReviews && validatedReviews.length > 0 ? (
        <div class="grid grid-cols-[repeat(auto-fit,minmax(350px,1fr))] gap-8 mt-8 max-md:grid-cols-1 max-md:gap-6 max-sm:gap-4" role="region" aria-labelledby="reviews-heading">
          {validatedReviews.map((review, index) => (
            <article class="bg-card border border-line rounded-[14px] p-6 shadow-custom transition-all duration-200 hover:-translate-y-0.5 hover:shadow-[0_8px_25px_rgba(0,0,0,0.1)] max-md:p-5 max-sm:p-4" aria-labelledby={`review-author-${index}`}>
              <div class="flex justify-between items-center mb-4 max-sm:flex-col max-sm:items-start max-sm:gap-2">
                <div class="flex gap-0.5" role="img" 
                     aria-label={`Calificación: ${review.rating || 5} de 5 estrellas`}>
                  {Array.from({ length: Math.min(Math.max(review.rating || 5, 1), 5) }, () => (
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="#ffd700" 
                         aria-hidden="true">
                      <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z"/>
                    </svg>
                  ))}
                </div>
                <time class="text-sm text-muted" 
                      datetime={review.date || new Date().toISOString().split('T')[0]}>
                  {review.date || 'Fecha no disponible'}
                </time>
              </div>
              <blockquote class="italic leading-relaxed mb-6 text-ink">
                <p>"{review.text || 'Excelente experiencia en Preta Fit.'}"</p>
              </blockquote>
              <div class="flex items-center gap-3">
                <div class="w-10 h-10 bg-brand text-white rounded-full flex items-center justify-center font-bold text-lg" aria-hidden="true">
                  {(review.name || 'Cliente').charAt(0).toUpperCase()}
              </div>
              <cite id={`review-author-${index}`} class="font-semibold text-ink">
                {review.name || 'Cliente Anónimo'}
              </cite>
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="text-center py-12 px-8 mt-8 bg-card border border-line rounded-[14px] text-muted">
        <div class="mb-4 opacity-60">
          <svg width="48" height="48" viewBox="0 0 24 24" fill="none">
            <path d="M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z" fill="#e5e7eb"/>
          </svg>
        </div>
        <h3 class="mb-2 text-ink text-xl font-medium">No hay reseñas disponibles</h3>
        <p class="text-sm">Sé el primero en compartir tu experiencia en Preta Fit.</p>
      </div>
    )}

    <div class="text-center mt-12">
      <a 
        href={googleMapsUrl}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center gap-2 bg-brand text-white no-underline py-3 px-5 rounded-full font-bold text-sm transition-all duration-200 shadow-[0_6px_18px_rgba(255,106,42,0.25)] hover:-translate-y-0.5 hover:shadow-[0_10px_22px_rgba(255,106,42,0.32)] hover:bg-brand-600 max-md:py-2.5 max-md:px-4 max-md:text-xs"
      >
        Ver más reseñas en Google
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" class="transition-transform duration-200 group-hover:translate-x-0.5">
          <path d="M7 17L17 7M17 7H7M17 7V17" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </a>
    </div>
  </div>
</section>